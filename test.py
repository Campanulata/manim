from manimlib.imports import *
class ComplexAnalysisOverlay(Scene):
    def construct(self):
        # objects
        numberplane = NumberPlane()
        trapezoid = Polygon(np.array([0,0,0]),np.array([0,1,0]),np.array([2,2.5,0]),np.array([2,0,0]),color=RED)
        # 梯形
        a = TextMobject("a",color=RED)
        a.shift(0.25*LEFT+0.5*UP)
        b = TextMobject("b",color=RED)
        b.shift(2.25*RIGHT+0.5*UP)
        h = TextMobject("h",color=RED)
        h.shift(1*RIGHT+0.25*DOWN)
        abh = VGroup(a,b,h)
        # 公式1
        s1 = TexMobject("S=\\frac{1}{2}(a+b) h")
        s1.shift(4*LEFT+2.5*UP)
        # 公式2
        dashedline = DashedLine(np.array([0,1,0]),np.array([2,1,0]))
        trapezoid_rectangle = Polygon(np.array([0,0,0]),np.array([0,1,0]),np.array([2,1,0]),np.array([2,0,0]),color=WHITE)
        trapezoid_rectangle_small = Polygon(np.array([-4.5,0.25,0]),np.array([-4.5,0.75,0]),np.array([-3.5,0.75,0]),np.array([-3.5,0.25,0]),color=WHITE)
        plus = TextMobject("+")
        plus.shift(3*LEFT+0.5*UP)
        trapezoid_angle = Polygon(np.array([0,1,0]),np.array([2,2.5,0]),np.array([2,1,0]),color=WHITE)
        trapezoid_angle_small = Polygon(np.array([-2.5,0.3,0]),np.array([-2,0.7,0]),np.array([-2,0.3,0]),color=WHITE)
        
        s2 = TexMobject("S=")
        s2.shift(5.2*LEFT+0.5*UP)
        # 公式3
        s3 = TexMobject("S=")
        s3.shift(5.2*LEFT+1.5*DOWN)

        dashedline3 = DashedLine(np.array([0,1,0]),np.array([-4/3,0,0]))
        angle_big3 = Polygon(np.array([-4/3,0,0]),np.array([2,2.5,0]),np.array([2,0,0]),color = WHITE)
        angle_small3 = Polygon(np.array([-4/3,0,0]),np.array([0,1,0]),np.array([0,0,0]),color=WHITE)
        angle_big3_s = Polygon(np.array([-4.5,-1.8,0]),np.array([-3.5,-1.2,0]),np.array([-3.5,-1.8,0]),color = WHITE)
        angle_small3_s = Polygon(np.array([-2.5,-1.7,0]),np.array([-2,-1.3,0]),np.array([-2,-1.7,0]),color = WHITE)
        cut = TextMobject("-")
        cut.shift(3*LEFT+1.5*DOWN)

        # showing
        self.add(numberplane)
        self.play(Write(trapezoid))
        self.play(Write(abh))
        self.play(Write(s1))
        self.play(Write(s2))
        self.play(Write(dashedline))
        self.play(Write(trapezoid_rectangle))
        self.play(ReplacementTransform(trapezoid_rectangle,trapezoid_rectangle_small))
        self.play(Write(plus))
        self.play(Write(trapezoid_angle))
        self.play(ReplacementTransform(trapezoid_angle,trapezoid_angle_small))
        self.play(Write(s3))
        self.play(Write(dashedline3))
        self.play(Write(angle_big3))
        self.play(ReplacementTransform(angle_big3,angle_big3_s))
        self.play(Write(cut))
        self.play(Write(angle_small3))
        self.play(ReplacementTransform(angle_small3,angle_small3_s))
        # 几何 函数
        self.play(FadeOut(dashedline))
        self.play(FadeOut(dashedline3))
        line_short = Line(np.array([0,1,0]),np.array([2,2.5,0]))
        self.play(ReplacementTransform(trapezoid,line_short))
        line_long = Line(np.array([-20/3,-4,0]),np.array([4,4,0]))
        self.play(ReplacementTransform(line_short,line_long))
        line_short = Line(np.array([0,1,0]),np.array([2,2.5,0]))
        self.play(ReplacementTransform(line_long,line_short))
        # 公式！
        v_0 = TexMobject("v_{0}")
        v_0.shift(0.25*LEFT+UP)
        self.play(ReplacementTransform(a,v_0))
        self.play(Write(DashedLine(np.array([2,0,0]),np.array([2,2.5,0]))))
        v_t = TexMobject("v_{t}")
        v_t.shift(2.25*RIGHT+2.5*UP)
        self.play(ReplacementTransform(b,v_t))
        t = TextMobject("t")
        t.shift(2*RIGHT+0.25*DOWN)
        self.play(ReplacementTransform(h,t))
        a = TextMobject("a")
        a.shift(RIGHT+2*UP)
        self.play(Write(a))
        x = TextMobject("x")
        x.shift(RIGHT+UP) 
        self.play(Write(x))
        # 公式1
        x11 = TexMobject("x=\\frac{1}{2}\\left(v_{0}+v_{t}\\right) t")
        x11.shift(3.75*LEFT+1.5*UP)
        self.play(Write(x11))
        x12 = TexMobject("x=\\frac{v_{0}+v_{t}}{2} t")
        x12.shift(4.2*LEFT+1.5*UP)
        self.play(ReplacementTransform(x11,x12))
        #
        vt = TexMobject("v_{t}=v_{0}+a t")
        vt.shift(3.5*RIGHT+2.5*UP)
        self.play(ReplacementTransform(v_t,vt))
        # 公式2
        x21 = TexMobject("x=v_{0} t+\\frac{1}{2} \\cdot t \\cdot\\left(v_{t}-v_{0}\\right)")
        x21.shift(2.8*LEFT+0.5*DOWN)
        self.play(Write(x21))
        x22 = TexMobject("x=v_{0} t+\\frac{1}{2} a t^{2}")
        x22.shift(3.9*LEFT+0.5*DOWN)
        self.play(ReplacementTransform(x21,x22))
        # 公式3
        self.play(Write(dashedline3))

        angleline_l = Line(np.array([-4/3,0,0]),np.array([2,0,0]),color=RED)
        self.play(Write(angleline_l))
        angleline_d_l = TexMobject("d_{l}=\\frac{v_{t}}{a}")
        angleline_d_l.scale(0.5)
        angleline_d_l.shift(RIGHT+0.25*DOWN)
        self.play(ReplacementTransform(angleline_l,angleline_d_l))

        angleline_s = Line(np.array([-4/3,0,0]),np.array([0,0,0]),color=RED)
        self.play(Write(angleline_s))
        angleline_d_s = TexMobject("d_{s}=\\frac{v_{0}}{a}")
        angleline_d_s.scale(0.5)
        angleline_d_s.shift(0.5*LEFT+0.25*DOWN)
        self.play(ReplacementTransform(angleline_s,angleline_d_s))

        x31 = TexMobject("x=\\frac{1}{2} d_{l} v_{t}-\\frac{1}{2} d_{s} v_{0}")
        x31.shift(3.5*LEFT+2.5*DOWN)
        self.play(Write(x31))
        x32 = TexMobject("x=\\frac{1}{2} \\frac{v_{t}^{2}}{a}-\\frac{1}{2} \\frac{v_{0}^{2}}{a}")
        x32.shift(3.8*LEFT+2.5*DOWN)
        self.play(ReplacementTransform(x31,x32))
        x33 = TexMobject("2 a x=v_{t}^{2}-v_{0}^{2}")
        x33.shift(4*LEFT+2.5*DOWN)
        self.play(ReplacementTransform(x32,x33))
